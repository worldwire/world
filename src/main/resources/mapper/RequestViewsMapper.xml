<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.spring.worldwire.dao.RequestViewsDao" >
  <resultMap id="BaseResultMap" type="com.spring.worldwire.model.RequestViews" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="request_id" property="requestId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="login_id" property="loginId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, request_id, user_id, login_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from request_views
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByLoginId" resultType="com.spring.worldwire.model.RequestViews">
    select
    <include refid="Base_Column_List"/>
    from request_views
    where login_id = #{loginId,jdbcType=BIGINT}
  </select>
  <select id="selectByUserId" resultType="com.spring.worldwire.model.RequestViews">
    select
    <include refid="Base_Column_List"/>
    from request_views
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from request_views
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.spring.worldwire.model.RequestViews" >
    insert into request_views (id, request_id, user_id, 
      login_id, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{requestId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
      #{loginId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.spring.worldwire.model.RequestViews" >
    insert into request_views
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="requestId != null" >
        request_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="loginId != null" >
        login_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="requestId != null" >
        #{requestId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="loginId != null" >
        #{loginId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spring.worldwire.model.RequestViews" >
    update request_views
    <set >
      <if test="requestId != null" >
        request_id = #{requestId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="loginId != null" >
        login_id = #{loginId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spring.worldwire.model.RequestViews" >
    update request_views
    set request_id = #{requestId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      login_id = #{loginId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>