<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.spring.worldwire.dao.LoginInfoDao" >
  <resultMap id="BaseResultMap" type="com.spring.worldwire.model.LoginInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="third_key" property="thirdKey" jdbcType="VARCHAR" />
    <result column="third_type" property="thirdType" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, password, email, nick_name, status, third_key, third_type, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from login_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from login_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.spring.worldwire.model.LoginInfo" >
    insert into login_info (id, user_name, password, 
      email, nick_name, status, 
      third_key, third_type, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{thirdKey,jdbcType=VARCHAR}, #{thirdType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.spring.worldwire.model.LoginInfo" >
    insert into login_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="thirdKey != null" >
        third_key,
      </if>
      <if test="thirdType != null" >
        third_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="thirdKey != null" >
        #{thirdKey,jdbcType=VARCHAR},
      </if>
      <if test="thirdType != null" >
        #{thirdType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spring.worldwire.model.LoginInfo" >
    update login_info
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="thirdKey != null" >
        third_key = #{thirdKey,jdbcType=VARCHAR},
      </if>
      <if test="thirdType != null" >
        third_type = #{thirdType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spring.worldwire.model.LoginInfo" >
    update login_info
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      third_key = #{thirdKey,jdbcType=VARCHAR},
      third_type = #{thirdType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- ************************************************  -->
  <!-- 根据条件查询登录用户信息 -->
  <select id="selectByQuery" resultMap="BaseResultMap" parameterType="com.spring.worldwire.query.LoginInfoQuery" >
  	select <include refid="Base_Column_List" />
  	from login_info
    <include refid="Query_Where"/>
  </select>

  <!-- 条件查询语句 -->
  <sql id="Query_Where">
    <trim prefix="where" prefixOverrides="AND |OR ">
      <if test="query.email != null">
        email = #{query.email,jdbcType=VARCHAR}
      </if>
      <if test="query.password != null">
        and password = #{query.password,jdbcType=VARCHAR}
      </if>
      <if test="query.pageSize != null  and query.pageStart != null">
        limit #{query.pageStart,jdbcType=INTEGER},#{query.pageSize,jdbcType=INTEGER}
      </if>
    </trim>

  </sql>

</mapper>