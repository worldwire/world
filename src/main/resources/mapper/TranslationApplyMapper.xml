<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.spring.worldwire.dao.TranslationApplyDao" >
  <resultMap id="BaseResultMap" type="com.spring.worldwire.model.TranslationApply" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="req_id" property="reqId" jdbcType="BIGINT" />
    <result column="orig_type" property="origType"
            typeHandler="com.spring.worldwire.extent.NumericEnumHandler"
            javaType="com.spring.worldwire.enums.LanguageEnum"/>
    <result column="from_req_id" property="fromReqId" jdbcType="BIGINT" />
    <result column="from_type" property="fromType"
            typeHandler="com.spring.worldwire.extent.NumericEnumHandler"
            javaType="com.spring.worldwire.enums.LanguageEnum"/>
    <result column="status" property="status"
            typeHandler="com.spring.worldwire.extent.NumericEnumHandler"
            javaType="com.spring.worldwire.enums.TranslationApplyStatusEnum"/>
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="operator_id" property="operatorId" jdbcType="BIGINT" />
    <result column="operator_time" property="operatorTime" jdbcType="TIMESTAMP" />
    <result column="auditor_id" property="auditorId" jdbcType="BIGINT" />
    <result column="auditor_time" property="auditorTime" jdbcType="TIMESTAMP" />
    <result column="auditor_msg" property="auditorMsg" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, req_id, orig_type, from_req_id, from_type, status, title, operator_id, operator_time,
    auditor_id, auditor_time, auditor_msg,user_id , create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from translation_apply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from translation_apply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.spring.worldwire.model.TranslationApply" >
    insert into translation_apply (id, req_id, orig_type, 
      from_req_id, from_type, status, title,
      operator_id, operator_time, auditor_id, 
      auditor_time, auditor_msg,user_id , create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{reqId,jdbcType=BIGINT}, #{origType,typeHandler=com.spring.worldwire.extent.NumericEnumHandler},
      #{fromReqId,jdbcType=BIGINT}, #{fromType,typeHandler=com.spring.worldwire.extent.NumericEnumHandler}, #{status,typeHandler=com.spring.worldwire.extent.NumericEnumHandler},#{title},
      #{operatorId,jdbcType=BIGINT}, #{operatorTime,jdbcType=TIMESTAMP}, #{auditorId,jdbcType=BIGINT}, 
      #{auditorTime,jdbcType=TIMESTAMP}, #{auditorMsg,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.spring.worldwire.model.TranslationApply" >
    insert into translation_apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="reqId != null" >
        req_id,
      </if>
      <if test="origType != null" >
        orig_type,
      </if>
      <if test="fromReqId != null" >
        from_req_id,
      </if>
      <if test="fromType != null" >
        from_type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="operatorTime != null" >
        operator_time,
      </if>
      <if test="auditorId != null" >
        auditor_id,
      </if>
      <if test="auditorTime != null" >
        auditor_time,
      </if>
      <if test="auditorMsg != null" >
        auditor_msg,
      </if>
      <if test="userId !=null">
        user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="reqId != null" >
        #{reqId,jdbcType=BIGINT},
      </if>
      <if test="origType != null" >
        #{origType,typeHandler=com.spring.worldwire.extent.NumericEnumHandler},
      </if>
      <if test="fromReqId != null" >
        #{fromReqId,jdbcType=BIGINT},
      </if>
      <if test="fromType != null" >
        #{fromType,typeHandler=com.spring.worldwire.extent.NumericEnumHandler},
      </if>
      <if test="status != null" >
        #{status,typeHandler=com.spring.worldwire.extent.NumericEnumHandler},
      </if>
      <if test="title != null" >
        #{title},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="operatorTime != null" >
        #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorId != null" >
        #{auditorId,jdbcType=BIGINT},
      </if>
      <if test="auditorTime != null" >
        #{auditorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorMsg != null" >
        #{auditorMsg,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spring.worldwire.model.TranslationApply" >
    update translation_apply
    <set >
      <if test="reqId != null" >
        req_id = #{reqId,jdbcType=BIGINT},
      </if>
      <if test="origType != null" >
        orig_type = #{origType,typeHandler=com.spring.worldwire.extent.NumericEnumHandler},
      </if>
      <if test="fromReqId != null" >
        from_req_id = #{fromReqId,jdbcType=BIGINT},
      </if>
      <if test="fromType != null" >
        from_type = #{fromType,typeHandler=com.spring.worldwire.extent.NumericEnumHandler},
      </if>
      <if test="status != null" >
        status = #{status,typeHandler=com.spring.worldwire.extent.NumericEnumHandler},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="operatorTime != null" >
        operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorId != null" >
        auditor_id = #{auditorId,jdbcType=BIGINT},
      </if>
      <if test="auditorTime != null" >
        auditor_time = #{auditorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorMsg != null" >
        auditor_msg = #{auditorMsg,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spring.worldwire.model.TranslationApply" >
    update translation_apply
    set req_id = #{reqId,jdbcType=BIGINT},
      orig_type = #{origType,typeHandler=com.spring.worldwire.extent.NumericEnumHandler},
      from_req_id = #{fromReqId,jdbcType=BIGINT},
      from_type = #{fromType,typeHandler=com.spring.worldwire.extent.NumericEnumHandler},
      status = #{status,typeHandler=com.spring.worldwire.extent.NumericEnumHandler},
      title = #{title},
      operator_id = #{operatorId,jdbcType=BIGINT},
      operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      auditor_id = #{auditorId,jdbcType=BIGINT},
      auditor_time = #{auditorTime,jdbcType=TIMESTAMP},
      auditor_msg = #{auditorMsg,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="pageCount" parameterType="com.spring.worldwire.query.TranslationApplyQuery" resultType="INTEGER">
    select count(*) from translation_apply

  </select>

  <select id="page" parameterType="com.spring.worldwire.query.TranslationApplyQuery" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from translation_apply order by id desc

  </select>

  <select id="findReqIdAndFrom" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from translation_apply
    WHERE req_id = #{param1,jdbcType=BIGINT} AND from_type = #{param2,typeHandler=com.spring.worldwire.extent.NumericEnumHandler} limit 1

  </select>

</mapper>